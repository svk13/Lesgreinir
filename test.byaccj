%{
import java.lang.Math;
import java.io.*;
import java.util.StringTokenizer;
//import is.hi.compilers.NanoLexer;
%}

/* YACC Declarations */
%token NUM
%left '-' '+'
%left '*' '/'
%left NEG /* negation--unary minus */
%right '^' /* exponentiation */

/* Grammar follows */
%%
input: /* empty string */
 | input line
 ;

line: '\n'
 | exp '\n' { System.out.println(" " + $1.dval + " "); }
 ;

exp: NUM { $$ = $1; }
 | exp '+' exp { $$ = new testVal($1.dval + $3.dval); }
 | exp '-' exp { $$ = new testVal($1.dval - $3.dval); }
 | exp '*' exp { $$ = new testVal($1.dval * $3.dval); }
 | exp '/' exp { $$ = new testVal($1.dval / $3.dval); }
 | '-' exp %prec NEG { $$ = new testVal(-$2.dval); }
 | exp '^' exp { $$ = new testVal(Math.pow($1.dval, $3.dval)); }
 | '(' exp ')' { $$ = $2; }
 ;
%%

String ins;
StringTokenizer st;

void yyerror(String s)
{
 System.out.println("par:"+s);
}

boolean newline;
int yylex()
{
String s;
int tok;
Double d;
 //System.out.print("yylex ");
 if (!st.hasMoreTokens())
 if (!newline)
 {
 newline=true;
 return '\n'; //So we look like classic YACC example
 }
 else
 return 0;
 s = st.nextToken();
 //System.out.println("tok:"+s);
 try
 {
 d = Double.valueOf(s);/*this may fail*/
 yylval = new testVal(d.doubleValue()); //SEE BELOW
 tok = NUM;
 }
 catch (Exception e)
 {
 tok = s.charAt(0);/*if not float, return char*/
 }
 return tok;
}

public NanoLexer getLexer( Reader r ) throws FileNotFoundException
{
		return new NanoLexer(r);
}

void dotest(String args[])
{
 NanoLexer in = null;;
try {
 in = getLexer(new FileReader(args[0]));
	}catch (Exception e){
		System.out.println("Villa Ã­ getLexer(): "+e);
	}
 int retCode;
 System.out.println("BYACC/J Calculator Demo");
 System.out.println("Note: Since this example uses the StringTokenizer");
 System.out.println("for simplicity, you will need to separate the items");
 System.out.println("with spaces, i.e.: '( 3 + 5 ) * 2'");
 while (true)
 {
 System.out.print("expression:");
 try
 {
 retCode = in.yylex();
 }
 catch (Exception e)
 {
 }
 st = new StringTokenizer(ins);
 newline=false;
 yyparse();
 }
}

public static void main(String args[])
{
 test par = new test(false);
 par.dotest(args);
}